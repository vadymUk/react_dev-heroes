{"version":3,"sources":["api/apiSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","hooks/http.hook.js","components/heroesFilters/filtersSlice.js","store/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","index.js"],"names":["apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getHeroes","query","providesTags","createHero","mutation","hero","url","method","body","invalidatesTags","deleteHero","id","useGetHeroesQuery","useCreateHeroMutation","useDeleteHeroMutation","HeroesListItem","elementClassName","name","description","element","onDelete","className","src","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","data","heroes","isLoading","isError","activeFilter","useSelector","state","filters","filteredHeroes","useMemo","slice","filter","item","useCallback","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","useHttp","request","a","headers","fetch","response","ok","Error","status","json","filtersAdapter","createEntityAdapter","initialState","getInitialState","filtersLoadingStatus","fetchFilters","createAsyncThunk","filtersSlice","createSlice","reducers","filtersChanged","action","payload","extraReducers","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","filtersFetching","filtersFetched","filtersFetchingError","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","getState","onSubmit","e","preventDefault","newHero","uuidv4","unwrap","htmlFor","required","placeholder","value","onChange","target","label","renderFilters","HeroesFilters","dispatch","useDispatch","useEffect","btnClass","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2026b517.chunk.js","sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react';\n\nexport const apiSlice = createApi({\n    reducerPath: 'api',\n    baseQuery: fetchBaseQuery({baseUrl: 'http://localhost:3001'}),\n    tagTypes: ['Heroes'],\n    endpoints: builder => ({\n        getHeroes: builder.query({\n            query: () => '/heroes',\n            providesTags: ['Heroes']\n        }),\n        createHero: builder.mutation({\n            query: hero => ({\n                url: '/heroes',\n                method: 'POST',\n                body: hero\n            }),\n            invalidatesTags: ['Heroes']\n        }),\n        deleteHero: builder.mutation({\n            query: id => ({\n                url: `/heroes/${id}`,\n                method: 'DELETE'\n            }),\n            invalidatesTags: ['Heroes']\n        })\n    })\n});\n\nexport const {useGetHeroesQuery, useCreateHeroMutation, useDeleteHeroMutation} = apiSlice;","\nconst HeroesListItem = ({name, description, element, onDelete}) => {\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span onClick={onDelete} \n                className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\n\nimport { useGetHeroesQuery, useDeleteHeroMutation } from '../../api/apiSlice';\n\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\nimport './heroesList.scss';\n\nconst HeroesList = () => {\n    const {\n        data: heroes = [],\n        isLoading,\n        isError,\n    } = useGetHeroesQuery();\n\n    const [deleteHero] = useDeleteHeroMutation();\n\n    const activeFilter = useSelector(state => state.filters.activeFilter);\n\n    const filteredHeroes = useMemo(() => {\n        const filteredHeroes = heroes.slice();\n\n        if (activeFilter === 'all') {\n            return filteredHeroes;\n        } else {\n            return filteredHeroes.filter(item => item.element === activeFilter);\n        }\n    }, [heroes, activeFilter]);\n\n    const onDelete = useCallback((id) => {\n        deleteHero(id);\n        // eslint-disable-next-line  \n    }, []);\n\n    if (isLoading) {\n        return <Spinner/>;\n    } else if (isError) {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return (\n                <CSSTransition\n                    timeout={0}\n                    classNames=\"hero\">\n                    <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n                </CSSTransition>\n            )\n        }\n\n        return arr.map(({id, ...props}) => {\n            return (\n                <CSSTransition \n                    key={id}\n                    timeout={500}\n                    classNames=\"hero\">\n                    <HeroesListItem  {...props} onDelete={() => onDelete(id)}/>\n                </CSSTransition>\n            )\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <TransitionGroup component=\"ul\">\n            {elements}\n        </TransitionGroup>\n    )\n}\n\nexport default HeroesList;","export const useHttp = () => {\n\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            throw e;\n        }\n    };\n\n    return {request}\n}","import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport {useHttp} from '../../hooks/http.hook';\n\n// const initialState = {\n//     filters: [],\n//     filtersLoadingStatus: 'idle',\n//     activeFilter: 'all'\n// }\nconst filtersAdapter = createEntityAdapter();\nconst initialState = filtersAdapter.getInitialState({\n    filtersLoadingStatus: 'idle',\n    activeFilter: 'all'\n})\n\nexport const fetchFilters = createAsyncThunk(\n    'filters/fetchFilters',\n    async () => {\n        const {request} = useHttp();\n        return await request(\"http://localhost:3001/filters\");\n    }\n);\n\nconst filtersSlice = createSlice({\n    name: 'filters',\n    initialState,\n    reducers: {\n        filtersChanged: (state, action) => {\n            state.activeFilter = action.payload;\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchFilters.pending, state => {state.filtersLoadingStatus = 'loading'})\n            .addCase(fetchFilters.fulfilled, (state, action) => {\n                state.filtersLoadingStatus = 'idle';\n                filtersAdapter.setAll(state, action.payload);\n            })\n            .addCase(fetchFilters.rejected, state => {\n                state.filtersLoadingStatus = 'error';\n            })\n            .addDefaultCase(() => {})\n    }\n});\n\nconst {actions, reducer} = filtersSlice;\n\nexport default reducer;\n\nexport const {selectAll} = filtersAdapter.getSelectors(state => state.filters);\n\nexport const {\n    filtersFetching,\n    filtersFetched,\n    filtersFetchingError,\n    filtersChanged\n} = actions;","import { configureStore } from '@reduxjs/toolkit';\nimport filters from '../components/heroesFilters/filtersSlice';\nimport { apiSlice } from '../api/apiSlice';\n\nconst stringMiddleware = () => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action)\n};\n\nconst store = configureStore({\n    reducer: {filters, [apiSlice.reducerPath]: apiSlice.reducer},\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware, apiSlice.middleware),\n    devTools: process.env.NODE_ENV !== 'production',\n})\n\nexport default store;","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport store from '../../store';\n\nimport { selectAll } from '../heroesFilters/filtersSlice';\nimport { useCreateHeroMutation } from '../../api/apiSlice';\n\nconst HeroesAddForm = () => {\n    const [heroName, setHeroName] = useState('');\n    const [heroDescr, setHeroDescr] = useState('');\n    const [heroElement, setHeroElement] = useState('');\n\n    const [createHero] = useCreateHeroMutation();\n\n    const {filtersLoadingStatus} = useSelector(state => state.filters);\n    const filters = selectAll(store.getState());\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        const newHero = {\n            id: uuidv4(),\n            name: heroName,\n            description: heroDescr,\n            element: heroElement\n        }\n\n        createHero(newHero).unwrap();\n\n        setHeroName('');\n        setHeroDescr('');\n        setHeroElement('');\n    }\n\n    const renderFilters = (filters, status) => {\n        if (status === \"loading\") {\n            return <option>Загрузка элементов</option>\n        } else if (status === \"error\") {\n            return <option>Ошибка загрузки</option>\n        }\n        \n        if (filters && filters.length > 0 ) {\n            return filters.map(({name, label}) => {\n                // eslint-disable-next-line\n                if (name === 'all')  return;\n\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"\n                    value={heroName}\n                    onChange={(e) => setHeroName(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}\n                    value={heroDescr}\n                    onChange={(e) => setHeroDescr(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    value={heroElement}\n                    onChange={(e) => setHeroElement(e.target.value)}>\n                    <option value=\"\">Я владею элементом...</option>\n                    {renderFilters(filters, filtersLoadingStatus)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport store  from '../../store';\n\nimport { filtersChanged, fetchFilters, selectAll } from './filtersSlice';\nimport Spinner from '../spinner/Spinner';\n\nconst HeroesFilters = () => {\n\n    const {filtersLoadingStatus, activeFilter} = useSelector(state => state.filters);\n    const filters = selectAll(store.getState());\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchFilters(request));\n\n        // eslint-disable-next-line\n    }, []);\n\n    if (filtersLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (filtersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>\n        }\n\n        return arr.map(({name, className, label}) => {\n\n            const btnClass = classNames('btn', className, {\n                'active': name === activeFilter\n            });\n            \n            return <button \n                        key={name} \n                        id={name} \n                        className={btnClass}\n                        onClick={() => dispatch(filtersChanged(name))}\n                        >{label}</button>\n        })\n    }\n\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}